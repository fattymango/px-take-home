basePath: /
definitions:
  dto.BaseResponse:
    properties:
      code:
        type: integer
      data: {}
      error:
        type: string
      message:
        type: string
      success:
        type: boolean
    type: object
  dto.TaskLogFilter:
    properties:
      from:
        type: integer
      to:
        type: integer
    type: object
  dto.ViewTask:
    properties:
      command:
        type: string
      exit_code:
        type: integer
      id:
        type: integer
      name:
        type: string
      reason:
        type: string
      status:
        $ref: '#/definitions/model.TaskStatus'
    type: object
  dto.ViewTaskLogs:
    properties:
      logs:
        items:
          type: string
        type: array
      total_lines:
        type: integer
    type: object
  model.TaskStatus:
    enum:
    - 1
    - 2
    - 3
    - 4
    - 5
    type: integer
    x-enum-varnames:
    - TaskStatus_Queued
    - TaskStatus_Running
    - TaskStatus_Completed
    - TaskStatus_Failed
    - TaskStatus_Cancelled
host: localhost:8888
info:
  contact:
    email: fiber@swagger.io
    name: API Support
  description: This is the API specification for the PX Take Home API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: PX Take Home API Specification
  version: 0.0.1
paths:
  /api/v1/tasks:
    get:
      consumes:
      - application/json
      description: Get all tasks
      operationId: GetAllTasks
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/dto.ViewTask'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.BaseResponse'
      security:
      - BearerAuth: []
      - BearerAuth: []
      summary: Get all tasks
      tags:
      - Task
    post:
      consumes:
      - application/json
      description: Create task
      operationId: CreateTask
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/dto.ViewTask'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.BaseResponse'
      security:
      - BearerAuth: []
      - BearerAuth: []
      summary: Create task
      tags:
      - Task
  /api/v1/tasks/{taskID}:
    get:
      consumes:
      - application/json
      description: Get task by ID
      operationId: GetTaskByID
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/dto.ViewTask'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.BaseResponse'
      security:
      - BearerAuth: []
      - BearerAuth: []
      summary: Get task by ID
      tags:
      - Task
  /api/v1/tasks/{taskID}/cancel:
    delete:
      consumes:
      - application/json
      description: Cancel task
      operationId: CancelTask
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.BaseResponse'
      security:
      - BearerAuth: []
      - BearerAuth: []
      summary: Cancel task
      tags:
      - Task
  /api/v1/tasks/{taskID}/logs:
    get:
      consumes:
      - application/json
      description: Get task logs by ID
      operationId: GetTaskLogsByID
      parameters:
      - description: Task ID
        in: path
        name: taskID
        required: true
        type: integer
      - description: Filter
        in: body
        name: filter
        required: true
        schema:
          $ref: '#/definitions/dto.TaskLogFilter'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/dto.ViewTaskLogs'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.BaseResponse'
      security:
      - BearerAuth: []
      - BearerAuth: []
      summary: Get task logs by ID
      tags:
      - Task Logs
schemes:
- http
securityDefinitions:
  BasicAuth:
    type: basic
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
