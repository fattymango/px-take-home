services:

  redis:
    image: redis:alpine
    restart: always
    container_name: redis
    env_file:
      - .env
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    volumes:
      - redis_data:/var/lib/redis
    networks:
      - crm_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 2s
      timeout: 5s
      retries: 5
  postgres:
    image: postgres:alpine
    restart: always
    container_name: postgres
    env_file:
      - .env
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - crm_network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 2s
      timeout: 5s
      retries: 5

  nats:
    image: nats:alpine
    restart: always
    container_name: nats
    ports:
      - ${NATS_PORT}:${NATS_PORT}
      - ${NATS_MONITOR_PORT}:${NATS_MONITOR_PORT}
    networks:
      - crm_network
    healthcheck:
      test: ["CMD", "nc", "-zv", "localhost", "${NATS_PORT}"]
      interval: 5s
      timeout: 5s
      retries: 10
networks:
  crm_network:
    name: crm_network
    driver: bridge

volumes:
  redis_data:
  postgres_data:




